/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1==NULL && l2==NULL) return NULL;
        if(l1==NULL && l2!=NULL) return l2;
        if(l1!=NULL && l2==NULL) return l1;
        ListNode* head=NULL;
        ListNode* current=NULL;
        while(l1!=NULL && l2!=NULL){
            if(l1->val<=l2->val){
                if(head==NULL){
                    head=l1;
                    current=l1;
                    l1=l1->next;
                }else{
                    current->next=l1;
                    current=l1;
                    l1=l1->next;
                }
            }else{
                if(head==NULL){
                    head=l2;
                    current=l2;
                    l2=l2->next;
                }else{
                    current->next=l2;
                    current=l2;
                    l2=l2->next;
                }
            }
        }
        if(l1!=NULL) current->next=l1;
        if(l2!=NULL) current->next=l2;
        return head;
    }
};